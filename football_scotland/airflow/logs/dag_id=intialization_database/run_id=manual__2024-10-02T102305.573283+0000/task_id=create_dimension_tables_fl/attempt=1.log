[2024-10-02T10:24:19.027+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-10-02T10:24:19.093+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: intialization_database.create_dimension_tables_fl manual__2024-10-02T10:23:05.573283+00:00 [queued]>
[2024-10-02T10:24:19.115+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: intialization_database.create_dimension_tables_fl manual__2024-10-02T10:23:05.573283+00:00 [queued]>
[2024-10-02T10:24:19.118+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-10-02T10:24:19.144+0000] {taskinstance.py:2330} INFO - Executing <Task(PostgresOperator): create_dimension_tables_fl> on 2024-10-02 10:23:05.573283+00:00
[2024-10-02T10:24:19.156+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=2216) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-10-02T10:24:19.159+0000] {standard_task_runner.py:63} INFO - Started process 2218 to run task
[2024-10-02T10:24:19.159+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'intialization_database', 'create_dimension_tables_fl', 'manual__2024-10-02T10:23:05.573283+00:00', '--job-id', '3222', '--raw', '--subdir', 'DAGS_FOLDER/initialization.py', '--cfg-path', '/tmp/tmp02egopkw']
[2024-10-02T10:24:19.161+0000] {standard_task_runner.py:91} INFO - Job 3222: Subtask create_dimension_tables_fl
[2024-10-02T10:24:19.253+0000] {task_command.py:426} INFO - Running <TaskInstance: intialization_database.create_dimension_tables_fl manual__2024-10-02T10:23:05.573283+00:00 [running]> on host 6dc69f1b4d8f
[2024-10-02T10:24:19.452+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='intialization_database' AIRFLOW_CTX_TASK_ID='create_dimension_tables_fl' AIRFLOW_CTX_EXECUTION_DATE='2024-10-02T10:23:05.573283+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-10-02T10:23:05.573283+00:00'
[2024-10-02T10:24:19.455+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-10-02T10:24:19.456+0000] {sql.py:276} INFO - Executing: --CREATE DIMENSION TABLES
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'scottish_premiership' AND table_name = 'dim_general_info') THEN
        CREATE TABLE scottish_premiership.dim_general_info (
            game_id SERIAL PRIMARY KEY,
            game_date varchar(255) ,
            fd_time varchar(255),
            hometeam varchar(255) ,
            awayteam varchar(255),
            fd_fthg varchar(255),
            fd_ftag varchar(255),
            fd_hthg varchar(255),
            fd_htag varchar(255),
            fd_ftr varchar(255),
            fd_htr varchar(255),
            fd_tournament_season varchar(255),
            sofa_tournament_name varchar(255),
            sofa_tournament_country varchar(255),
            sofa_tournament_name_season varchar(255),
            sofa_tournament_season varchar(255),
            sofa_tournament_round varchar(255),
            fbref_time varchar(255),
            fbref_comp varchar(255),
            fbref_round varchar(255),
            fbref_day varchar(255),
            fbref_attendance varchar(255),
            fbref_full_season_format varchar(255),
            fbref_shortened_season varchar(255),
            fbref_match_report_url varchar(255),
            fbref_game_venue_epoch varchar(255),
            fbref_game_venue_time varchar(255),
            fbref_stadium_name varchar(255),
            german_import_time varchar(255),
            UNIQUE  (game_date,hometeam)
        );
    END IF;

    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'scottish_premiership' AND table_name = 'dim_referees') THEN
    CREATE TABLE scottish_premiership.dim_general_info (
        game_id INT PRIMARY KEY REFERENCES scottish_premiership.dim_general_info (game_id),  -- Primary key and foreign key to dim_general_info,
        fd_referee varchar(255) ,
        sofa_referee_name varchar(255) ,
        sofa_referee_yellow_cards varchar(255) ,
        sofa_referee_redcards varchar(255) ,
        sofa_referee_yellowredcards varchar(255) ,	
        sofa_referee_games	varchar(255) ,
        sofa_referee_country varchar(255) ,
        fbref_gs_referee varchar(255) ,--general stats
        fbref_referee	varchar(255) ,
        fbref_ar_first	varchar(255) ,
        fbref_ar_second	varchar(255) ,
        fbref_fourth_official varchar(255) 
    );
    END IF;
END $$;


[2024-10-02T10:24:19.472+0000] {base.py:84} INFO - Using connection ID 'football_scotland_connection' for task execution.
[2024-10-02T10:24:19.490+0000] {base.py:84} INFO - Using connection ID 'football_scotland_connection' for task execution.
[2024-10-02T10:24:19.502+0000] {sql.py:487} INFO - Running statement: --CREATE DIMENSION TABLES
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'scottish_premiership' AND table_name = 'dim_general_info') THEN
        CREATE TABLE scottish_premiership.dim_general_info (
            game_id SERIAL PRIMARY KEY,
            game_date varchar(255) ,
            fd_time varchar(255),
            hometeam varchar(255) ,
            awayteam varchar(255),
            fd_fthg varchar(255),
            fd_ftag varchar(255),
            fd_hthg varchar(255),
            fd_htag varchar(255),
            fd_ftr varchar(255),
            fd_htr varchar(255),
            fd_tournament_season varchar(255),
            sofa_tournament_name varchar(255),
            sofa_tournament_country varchar(255),
            sofa_tournament_name_season varchar(255),
            sofa_tournament_season varchar(255),
            sofa_tournament_round varchar(255),
            fbref_time varchar(255),
            fbref_comp varchar(255),
            fbref_round varchar(255),
            fbref_day varchar(255),
            fbref_attendance varchar(255),
            fbref_full_season_format varchar(255),
            fbref_shortened_season varchar(255),
            fbref_match_report_url varchar(255),
            fbref_game_venue_epoch varchar(255),
            fbref_game_venue_time varchar(255),
            fbref_stadium_name varchar(255),
            german_import_time varchar(255),
            UNIQUE  (game_date,hometeam)
        );
    END IF;

    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'scottish_premiership' AND table_name = 'dim_referees') THEN
    CREATE TABLE scottish_premiership.dim_general_info (
        game_id INT PRIMARY KEY REFERENCES scottish_premiership.dim_general_info (game_id),  -- Primary key and foreign key to dim_general_info,
        fd_referee varchar(255) ,
        sofa_referee_name varchar(255) ,
        sofa_referee_yellow_cards varchar(255) ,
        sofa_referee_redcards varchar(255) ,
        sofa_referee_yellowredcards varchar(255) ,	
        sofa_referee_games	varchar(255) ,
        sofa_referee_country varchar(255) ,
        fbref_gs_referee varchar(255) ,--general stats
        fbref_referee	varchar(255) ,
        fbref_ar_first	varchar(255) ,
        fbref_ar_second	varchar(255) ,
        fbref_fourth_official varchar(255) 
    );
    END IF;
END $$;

, parameters: None
[2024-10-02T10:24:19.551+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-10-02T10:24:19.557+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 282, in execute
    output = hook.run(
             ^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 435, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py", line 492, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.DuplicateTable: relation "dim_general_info" already exists
CONTEXT:  SQL statement "CREATE TABLE scottish_premiership.dim_general_info (
        game_id INT PRIMARY KEY REFERENCES scottish_premiership.dim_general_info (game_id),  -- Primary key and foreign key to dim_general_info,
        fd_referee varchar(255) ,
        sofa_referee_name varchar(255) ,
        sofa_referee_yellow_cards varchar(255) ,
        sofa_referee_redcards varchar(255) ,
        sofa_referee_yellowredcards varchar(255) ,	
        sofa_referee_games	varchar(255) ,
        sofa_referee_country varchar(255) ,
        fbref_gs_referee varchar(255) ,--general stats
        fbref_referee	varchar(255) ,
        fbref_ar_first	varchar(255) ,
        fbref_ar_second	varchar(255) ,
        fbref_fourth_official varchar(255) 
    )"
PL/pgSQL function inline_code_block line 39 at SQL statement

[2024-10-02T10:24:19.580+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=intialization_database, task_id=create_dimension_tables_fl, run_id=manual__2024-10-02T10:23:05.573283+00:00, execution_date=20241002T102305, start_date=20241002T102419, end_date=20241002T102419
[2024-10-02T10:24:19.615+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 3222 for task create_dimension_tables_fl (relation "dim_general_info" already exists
CONTEXT:  SQL statement "CREATE TABLE scottish_premiership.dim_general_info (
        game_id INT PRIMARY KEY REFERENCES scottish_premiership.dim_general_info (game_id),  -- Primary key and foreign key to dim_general_info,
        fd_referee varchar(255) ,
        sofa_referee_name varchar(255) ,
        sofa_referee_yellow_cards varchar(255) ,
        sofa_referee_redcards varchar(255) ,
        sofa_referee_yellowredcards varchar(255) ,	
        sofa_referee_games	varchar(255) ,
        sofa_referee_country varchar(255) ,
        fbref_gs_referee varchar(255) ,--general stats
        fbref_referee	varchar(255) ,
        fbref_ar_first	varchar(255) ,
        fbref_ar_second	varchar(255) ,
        fbref_fourth_official varchar(255) 
    )"
PL/pgSQL function inline_code_block line 39 at SQL statement
; 2218)
[2024-10-02T10:24:19.657+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-10-02T10:24:19.672+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/models/baseoperator.py:1297: AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
  result = cls.__new__(cls)

[2024-10-02T10:24:19.700+0000] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-10-02T10:24:19.703+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
